# WAN 2.2 Text-to-Video Model Container - SIMPLIFIED APPROACH
# Based on analysis of wan2.2-benchmark:exact-cuda
# No pip upgrades, direct package installation with --break-system-packages

FROM ubuntu:24.04

# Set environment variables (same as working container, but without venv paths)
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CUDA_HOME=/usr/local/cuda-12.6
ENV PATH=/usr/local/cuda-12.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV LD_LIBRARY_PATH=/usr/local/cuda-12.6/lib64
ENV CUDA_VISIBLE_DEVICES=0,1,2,3,4,5,6,7
ENV NCCL_TREE_THRESHOLD=0
ENV NCCL_DEBUG=INFO

# Install CUDA toolkit (exact same method as working container)
RUN apt-get update && apt-get install -y wget && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-keyring_1.1-1_all.deb && \
    dpkg -i cuda-keyring_1.1-1_all.deb && \
    apt-get update && \
    apt-get -y install cuda-toolkit-12-6 && \
    rm -rf /var/lib/apt/lists/* && \
    rm cuda-keyring_1.1-1_all.deb

# Install system dependencies (same as working container)
RUN apt-get update && apt-get install -y \
    python3.12 \
    python3.12-dev \
    python3-pip \
    python3.12-venv \
    git \
    curl \
    vim \
    htop \
    build-essential \
    pkg-config \
    libhdf5-dev \
    libsndfile1 \
    ffmpeg \
    libavcodec-dev \
    libavformat-dev \
    libavutil-dev \
    libswscale-dev \
    libswresample-dev && \
    rm -rf /var/lib/apt/lists/*

# Set python3 to python3.12
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.12 1

# Install build dependencies first (required for flash_attn)
RUN pip3 install --break-system-packages packaging setuptools wheel

# Install PyTorch first (critical order) - use system pip with break-system-packages
RUN pip3 install --break-system-packages torch==2.8.0 torchvision==0.23.0

# Install flash-attention (requires build dependencies and special flags)
RUN pip3 install --break-system-packages flash_attn==2.8.3 --no-build-isolation

# Install core ML packages
RUN pip3 install --break-system-packages \
    transformers==4.56.1 \
    diffusers==0.35.1 \
    accelerate==1.10.1 \
    huggingface-hub==0.34.4 \
    safetensors==0.6.2

# Install scientific computing packages
RUN pip3 install --break-system-packages \
    numpy==2.2.6 \
    scipy==1.16.1 \
    scikit-learn==1.7.1 \
    numba==0.61.2 \
    llvmlite==0.44.0

# Install image processing packages
RUN pip3 install --break-system-packages \
    opencv-python==4.12.0.88 \
    pillow==11.3.0 \
    imageio==2.37.0

# Install audio processing packages (for WAN 2.2)
RUN pip3 install --break-system-packages \
    librosa==0.11.0 \
    soundfile==0.13.1 \
    audioread==3.0.1 \
    av==15.1.0 \
    decord==0.6.0 \
    soxr==1.0.0

# Install utility packages
RUN pip3 install --break-system-packages \
    tqdm==4.67.1 \
    einops==0.8.1 \
    easydict==1.13 \
    ftfy==6.3.1 \
    regex==2025.9.1 \
    tokenizers==0.22.0 \
    requests==2.32.5 \
    pyyaml==6.0.2 \
    psutil==7.0.0

# Install remaining packages from venv requirements
RUN pip3 install --break-system-packages \
    aiohappyeyeballs==2.6.1 \
    aiohttp==3.12.15 \
    aiosignal==1.4.0 \
    attrs==25.3.0 \
    certifi==2025.8.3 \
    cffi==1.17.1 \
    charset-normalizer==3.4.3 \
    cryptography==45.0.7 \
    dashscope==1.24.4 \
    decorator==5.2.1 \
    filelock==3.19.1 \
    frozenlist==1.7.0 \
    fsspec==2025.9.0 \
    hf-xet==1.1.9 \
    idna==3.10 \
    importlib_metadata==8.7.0 \
    inquirerpy==0.3.4 \
    jinja2==3.1.6 \
    joblib==1.5.2 \
    lazy_loader==0.4 \
    markupsafe==3.0.2 \
    mpmath==1.3.0 \
    msgpack==1.1.1 \
    multidict==6.6.4 \
    networkx==3.5 \
    packaging==25.0 \
    pfzy==0.3.4 \
    platformdirs==4.4.0 \
    pooch==1.8.2 \
    prompt_toolkit==3.0.52 \
    propcache==0.3.2 \
    pycparser==2.22 \
    sympy==1.14.0 \
    threadpoolctl==3.6.0 \
    triton==3.4.0 \
    typing_extensions==4.15.0 \
    urllib3==2.5.0 \
    wcwidth==0.2.13 \
    websocket-client==1.8.0 \
    yarl==1.20.1 \
    zipp==3.23.0

# Create workspace and directories
WORKDIR /workspace
RUN mkdir -p /workspace/models /workspace/results


# Clone WAN 2.2 model scripts from official repository
RUN git clone https://github.com/Wan-Video/Wan2.2.git /workspace/wan2.2

# Set default command
CMD ["/bin/bash"]
